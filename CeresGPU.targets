<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <ItemGroup>
<!--        <EmbeddedResource Include="**\*.spv"/>-->
<!--        <EmbeddedResource Include="**\*.metal" />-->
    </ItemGroup>
    
    <ItemGroup>
        <GlslVertFile Include="**\*.vert.glsl">
            <CsFile>%(RecursiveDir)$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)')).Generated.cs</CsFile>
            <LogicalDirectory>$(MSBuildProjectName).$([System.String]::new('%(RecursiveDir)').Replace('/', '.'))</LogicalDirectory>
        </GlslVertFile>
        <GlslFragFile Include="**\*.frag.glsl">
            <LogicalDirectory>$(MSBuildProjectName).$([System.String]::new('%(RecursiveDir)').Replace('/', '.'))</LogicalDirectory>
        </GlslFragFile>
    </ItemGroup>
    
    <ItemGroup>
        <GgenScript Include="$(MSBuildThisFileDirectory)\ggen\**\*.py">
            <Link>%(RelativeDir)/%(Filename).%(Extension)</Link>
        </GgenScript>
    </ItemGroup>

    <PropertyGroup>
        <GgenReceiptFile>ggenreceipt.txt</GgenReceiptFile>
        <GgenSpvTargetReceiptFile>ggen_spv_receipt.txt</GgenSpvTargetReceiptFile>
        <GgenMetalTargetReceiptFile>ggen_metal_receipt.txt</GgenMetalTargetReceiptFile>
        <GgenCsTargetReceiptFile>ggen_cs_receipt.txt</GgenCsTargetReceiptFile>
    </PropertyGroup>
    
    <ItemGroup>
        <Compile Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(CsFile)')">
            <Link>%(CsFile)</Link>
        </Compile>
        
        <EmbeddedResource Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).spv')">
            <LogicalName>%(LogicalDirectory)%(Filename).spv</LogicalName>
        </EmbeddedResource>
        <EmbeddedResource Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename)_gl.spv')">
            <LogicalName>%(LogicalDirectory)%(Filename)_gl.spv</LogicalName>
        </EmbeddedResource>
        <EmbeddedResource Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).metal')">
            <LogicalName>%(LogicalDirectory)%(Filename).metal</LogicalName>
        </EmbeddedResource>

        <EmbeddedResource Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).spv')">
            <LogicalName>%(LogicalDirectory)%(Filename).spv</LogicalName>
        </EmbeddedResource>
        <EmbeddedResource Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename)_gl.spv')">
            <LogicalName>%(LogicalDirectory)%(Filename)_gl.spv</LogicalName>
        </EmbeddedResource>
        <EmbeddedResource Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).metal')">
            <LogicalName>%(LogicalDirectory)%(Filename).metal</LogicalName>
        </EmbeddedResource>
    </ItemGroup>
    

    <Target Name="ggen" Inputs="@(GgenScript)" Outputs="$(IntermediateOutputPath)$(GgenReceiptFile)">
        <!-- This target doesn't need to do anything, since we don't need to build the python scripts.
            Having this target however allows the generated shader files to be invalided when the ggen script has changed. -->
        <Touch Files="$(IntermediateOutputPath)$(GgenReceiptFile)" AlwaysCreate="true" />
        <Message Importance="high" Text="ggen script has changed. Generated shader files will be rebuilt."/>
        <ItemGroup>
            <FileWrites Include="$(IntermediateOutputPath)$(GgenReceiptFile)" />
        </ItemGroup>
    </Target>
    
    <!--
        ===== 
        Generated Shader CS Files
        ===== 
    -->

    <Target Name="ShaderGenCs" 
            BeforeTargets="Build;BeforeBuild;DispatchToInnerBuilds"
            Inputs="$(IntermediateOutputPath)$(GgenReceiptFile);
                @(GlslVertFile);
                @(GlslFragFile)"
            Outputs="$(IntermediateOutputPath)$(GgenCsTargetReceiptFile);
                @(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(CsFile)');
                @(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).cs_fraginput_dummyoutput')"
            DependsOnTargets="ggen">
        <Touch Files="$(IntermediateOutputPath)$(GgenCsTargetReceiptFile)" AlwaysCreate="true" />
        <Exec WorkingDirectory="$(MSBuildThisFileDirectory)" Command="python3 -m ggen &quot;$(MSBuildProjectDirectory)&quot; --files &quot;@(GlslVertFile -> '%(FullPath)')&quot; --targets csclass --output-dir &quot;$(IntermediateOutputPath)ggen&quot;" />
        <Touch Files="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).cs_fraginput_dummyoutput')" AlwaysCreate="true" />
        <ItemGroup>
            <FileWrites Include="$(IntermediateOutputPath)$(GgenCsTargetReceiptFile);
                @(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(CsFile)');
                @(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).cs_fraginput_dummyoutput')" />
        </ItemGroup>
        
    </Target>

    <!--
        ===== 
        Compile OpenGL-compatible SpirV files
        ===== 
    -->

    <Target Name="ShaderGenOpenGlSpirV"
            BeforeTargets="Build;BeforeBuild;DispatchToInnerBuilds"
            Inputs="$(IntermediateOutputPath)$(GgenReceiptFile);
                @(GlslVertFile);
                @(GlslFragFile)"
            Outputs="$(IntermediateOutputPath)$(GgenSpvTargetReceiptFile);
                @(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename)_gl.spv');
                @(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename)_gl.spv')"
            DependsOnTargets="ggen">
        <Touch Files="$(IntermediateOutputPath)$(GgenSpvTargetReceiptFile)" AlwaysCreate="true" />
        <Exec WorkingDirectory="$(MSBuildThisFileDirectory)" Command="python3 -m ggen &quot;$(MSBuildProjectDirectory)&quot; --files &quot;@(GlslFile -> '%(FullPath)')&quot; --targets opengl_spirv --output-dir &quot;$(IntermediateOutputPath)ggen&quot;" />
        <ItemGroup>
            <FileWrites Include="$(IntermediateOutputPath)$(GgenSpvTargetReceiptFile);
                @(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename)_gl.spv');
                @(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename)_gl.spv')" />
        </ItemGroup>
    </Target>

    
    <!--
        ===== 
        Transpile Metal shader source
        ===== 
    -->

    <Target Name="ShaderGenMetalInner"
            BeforeTargets="Build;BeforeBuild;DispatchToInnerBuilds"
            Inputs="$(IntermediateOutputPath)$(GgenReceiptFile);
                @(GlslVertFile);
                @(GlslFragFile)"
            Outputs="$(IntermediateOutputPath)$(GgenMetalTargetReceiptFile);
                @(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).metal');
                @(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).metal')"
            DependsOnTargets="ggen">
        <Touch Files="$(IntermediateOutputPath)$(GgenMetalTargetReceiptFile)" AlwaysCreate="true" />
        <Exec WorkingDirectory="$(MSBuildThisFileDirectory)" Command="python3 -m ggen &quot;$(MSBuildProjectDirectory)&quot; --files &quot;@(GlslFile -> '%(FullPath)')&quot; --targets metal --output-dir &quot;$(IntermediateOutputPath)ggen&quot;" />
        <ItemGroup>
            <FileWrites Include="$(IntermediateOutputPath)$(GgenMetalTargetReceiptFile);
                @(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).metal');
                @(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).metal')" />
        </ItemGroup>
    </Target>
    
</Project>