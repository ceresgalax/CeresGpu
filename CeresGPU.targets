<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Import Project="$(MSBuildThisFileDirectory)FindPythonTask.targets" />

    <PropertyGroup>
        <PrebuiltExternalToolsVersion>1.1.0</PrebuiltExternalToolsVersion>
    </PropertyGroup>
    
    <ItemGroup>
        <GlslVertFile Include="**\*.vert.glsl">
            <GgenVersionFile>%(RecursiveDir)%(Filename).ggen_version</GgenVersionFile>
            <LogicalDirectory>$(MSBuildProjectName).$([System.String]::new('%(RecursiveDir)').Replace('/', '.').Replace('\', '.'))</LogicalDirectory>
            <CsFile>%(RecursiveDir)$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)')).Generated.cs</CsFile>
            <VulkanFilename>$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)')).vulkan</VulkanFilename>
        </GlslVertFile>
        <GlslFragFile Include="**\*.frag.glsl">
            <GgenVersionFile>%(RecursiveDir)%(Filename).ggen_version</GgenVersionFile>
            <LogicalDirectory>$(MSBuildProjectName).$([System.String]::new('%(RecursiveDir)').Replace('/', '.').Replace('\', '.'))</LogicalDirectory>
        </GlslFragFile>
    </ItemGroup>
    
    <ItemGroup>
        <GgenScript Include="$(MSBuildThisFileDirectory)\ggen\**\*.py">
            <Link>%(RelativeDir)/%(Filename).%(Extension)</Link>
        </GgenScript>
    </ItemGroup>
    
    
    <ItemGroup>
        <!-- 
            Define as an Item outside of the Target so that IDEs can pick up on these files.
            This seemed to be an issue with Rider, not sure if it's an issue with Visual Studio or not. 
        -->
        <Compile Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(CsFile)')">
            <Link>%(CsFile)</Link>
        </Compile>
    </ItemGroup>
    
    <!--
    Targets to copy the binaries we need from the prebuilt binaries nuget package, renaming them if necesary. 
    -->
    <Target Name="ComputePrebuiltToolsToPrepare" BeforeTargets="PreparePrebuiltTools" Condition="'$(TargetFramework)' == 'once'">
        <ItemGroup>
            <_PrebuiltTool Include="$(NuGetPackageRoot)ceresgpuprebuiltexternaltools\$(PrebuiltExternalToolsVersion)\runtimes\$(HostRid)\native\*" />
            <!-- Create the real items now that we can access the metadata. -->
            <PrebuiltTool Include="@(_PrebuiltTool)">
                <OutputDir>$(BaseIntermediateOutputPath)staged_tools\</OutputDir>
                <OutputPath Condition="'$(HostRidOs)' != 'osx'">%(PrebuiltTool.OutputDir)%(Filename)%(Extension)</OutputPath>
                <!-- Strip off the .bin extension for osx. -->
                <OutputPath Condition="'$(HostRidOs)' == 'osx'">%(PrebuiltTool.OutputDir)%(Filename)</OutputPath>
            </PrebuiltTool>
        </ItemGroup>
    </Target>
    <Target Name="PreparePrebuiltTools"
            BeforeTargets="ggen"
            AfterTargets="BeforeBuild"
            Inputs="@(PrebuiltTool)"
            Outputs="@(PrebuiltTool -> '%(OutputPath)')"
    >
        <Message Importance="high" Text="Performing one-time staging of ggen prebuilt tools." />
        
        <MakeDir Directories="@(PrebuiltTool -> '%(OutputDir)')" />
        <Copy
            SourceFiles="@(PrebuiltTool)"
            DestinationFiles="@(PrebuiltTool -> '%(OutputPath)')"
        />
        <ItemGroup>
            <FileWrites Include="@(PrebuiltTool -> '%(OutputPath)')" />
        </ItemGroup>
    </Target>

    <Target Name="DispatchPreparePrebuiltTools" AfterTargets="BeforeBuild" BeforeTargets="ggen">
        <!--TargetFramework=once is critical here, as msbuild will not execute a task from same project with same properties twice. -->
        <MSBuild Projects="$(MSBuildProjectFile)" Targets="PreparePrebuiltTools" Properties="TargetFramework=once" />
    </Target>

    <!--
    The ggen target itself. 
    -->
    <Target Name="ggen" AfterTargets="AfterResolveReferences" BeforeTargets="BeforeCompile;PrepareResourceNames">
        <Message Importance="high" Text="Running ggen..." />
        <FindPythonTask>
            <Output TaskParameter="PythonPath" PropertyName="Python" />
        </FindPythonTask>
        <Exec
            WorkingDirectory="$(MSBuildThisFileDirectory)"
            Command="$(Python) -m ggen &quot;$(MSBuildProjectDirectory)&quot; --ggen-script-files &quot;@(GgenScript)&quot; --files &quot;@(GlslVertFile -> '%(FullPath)');@(GlslFragFile -> '%(FullPath)')&quot; --output-dir &quot;$(MSBuildProjectDirectory)/$(IntermediateOutputPath)ggen&quot;" 
        />
        <ItemGroup>

            <Compile Remove="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(CsFile)')" />
            <Compile Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(CsFile)')">
                <Link>%(GlslVertFile.CsFile)</Link>
            </Compile>

            <EmbeddedResource Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)%(VulkanFilename)')">
                <LogicalName>%(GlslVertFile.LogicalDirectory)%(GlslVertFile.VulkanFilename)</LogicalName>
            </EmbeddedResource>
            <EmbeddedResource Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).spv')">
                <LogicalName>%(GlslVertFile.LogicalDirectory)%(GlslVertFile.Filename).spv</LogicalName>
            </EmbeddedResource>
            <EmbeddedResource Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename)_gl.glsl')">
                <LogicalName>%(GlslVertFile.LogicalDirectory)%(GlslVertFile.Filename)_gl.glsl</LogicalName>
            </EmbeddedResource>
            <EmbeddedResource Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).metal')">
                <LogicalName>%(GlslVertFile.LogicalDirectory)%(GlslVertFile.Filename).metal</LogicalName>
            </EmbeddedResource>
            <EmbeddedResource Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).spv')">
                <LogicalName>%(GlslFragFile.LogicalDirectory)%(GlslFragFile.Filename).spv</LogicalName>
            </EmbeddedResource>
            <EmbeddedResource Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename)_gl.glsl')">
                <LogicalName>%(GlslFragFile.LogicalDirectory)%(GlslFragFile.Filename)_gl.glsl</LogicalName>
            </EmbeddedResource>
            <EmbeddedResource Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RecursiveDir)/%(Filename).metal')">
                <LogicalName>%(GlslFragFile.LogicalDirectory)%(GlslFragFile.Filename).metal</LogicalName>
            </EmbeddedResource>
            
            <FileWrites Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(CsFile)')" />
            <FileWrites Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(VulkanFile)')" />
            <FileWrites Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).spv')" />
            <FileWrites Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).spv')" />
            <FileWrites Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).reflection.json')" />
            <FileWrites Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).reflection.json')" />
            <FileWrites Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename)_gl.glsl')" />
            <FileWrites Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename)_gl.glsl')" />
            <FileWrites Include="@(GlslVertFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).metal')" />
            <FileWrites Include="@(GlslFragFile -> '$(IntermediateOutputPath)ggen/%(RelativeDir)%(Filename).metal')" />
            
        </ItemGroup>
    </Target>
    
</Project>
