using System;
using Silk.NET.Vulkan;

namespace CeresGpu.Graphics.Vulkan;

public static class FormatUtil
{
    public static Format ToVkFormat(this ColorFormat format)
    {
        return format switch {
            ColorFormat.R4G4B4A4_UNORM_PACK16 => Format.R4G4B4A4UnormPack16,
            ColorFormat.B4G4R4A4_UNORM_PACK16 => Format.B4G4R4A4UnormPack16,
            ColorFormat.R5G6B5_UNORM_PACK16 => Format.R5G6B5UnormPack16,
            ColorFormat.B5G6R5_UNORM_PACK16 => Format.B5G6R5UnormPack16,
            ColorFormat.R5G5B5A1_UNORM_PACK16 => Format.R5G5B5A1UnormPack16,
            ColorFormat.B5G5R5A1_UNORM_PACK16 => Format.B5G5R5A1UnormPack16,
            ColorFormat.A1R5G5B5_UNORM_PACK16 => Format.A1R5G5B5UnormPack16,
            ColorFormat.R8_UNORM => Format.R8Unorm,
            ColorFormat.R8_SNORM => Format.R8SNorm,
            ColorFormat.R8_USCALED => Format.R8Uscaled,
            ColorFormat.R8_SSCALED => Format.R8Sscaled,
            ColorFormat.R8_UINT => Format.R8Uint,
            ColorFormat.R8_SINT => Format.R8Sint,
            ColorFormat.R8_SRGB => Format.R8Srgb,
            ColorFormat.R8G8_UNORM => Format.R8G8Unorm,
            ColorFormat.R8G8_SNORM => Format.R8G8SNorm,
            ColorFormat.R8G8_USCALED => Format.R8G8Uscaled,
            ColorFormat.R8G8_SSCALED => Format.R8G8Sscaled,
            ColorFormat.R8G8_UINT => Format.R8G8Uint,
            ColorFormat.R8G8_SINT => Format.R8G8Sint,
            ColorFormat.R8G8_SRGB => Format.R8G8Srgb,
            ColorFormat.R8G8B8A8_UNORM => Format.R8G8B8A8Unorm,
            ColorFormat.R8G8B8A8_SNORM => Format.R8G8B8A8SNorm,
            ColorFormat.R8G8B8A8_USCALED => Format.R8G8B8A8Uscaled,
            ColorFormat.R8G8B8A8_SSCALED => Format.R8G8B8A8Sscaled,
            ColorFormat.R8G8B8A8_UINT => Format.R8G8B8A8Uint,
            ColorFormat.R8G8B8A8_SINT => Format.R8G8B8A8Sint,
            ColorFormat.R8G8B8A8_SRGB => Format.R8G8B8A8Srgb,
            ColorFormat.B8G8R8A8_UNORM => Format.B8G8R8A8Unorm,
            ColorFormat.B8G8R8A8_SNORM => Format.B8G8R8A8SNorm,
            ColorFormat.B8G8R8A8_USCALED => Format.B8G8R8A8Uscaled,
            ColorFormat.B8G8R8A8_SSCALED => Format.B8G8R8A8Sscaled,
            ColorFormat.B8G8R8A8_UINT => Format.B8G8R8A8Uint,
            ColorFormat.B8G8R8A8_SINT => Format.B8G8R8A8Sint,
            ColorFormat.B8G8R8A8_SRGB => Format.B8G8R8A8Srgb,
            ColorFormat.A8B8G8R8_UNORM_PACK32 => Format.A8B8G8R8UnormPack32,
            ColorFormat.A8B8G8R8_SNORM_PACK32 => Format.A8B8G8R8SNormPack32,
            ColorFormat.A8B8G8R8_USCALED_PACK32 => Format.A8B8G8R8UscaledPack32,
            ColorFormat.A8B8G8R8_SSCALED_PACK32 => Format.A8B8G8R8SscaledPack32,
            ColorFormat.A8B8G8R8_UINT_PACK32 => Format.A8B8G8R8UintPack32,
            ColorFormat.A8B8G8R8_SINT_PACK32 => Format.A8B8G8R8SintPack32,
            ColorFormat.A8B8G8R8_SRGB_PACK32 => Format.A8B8G8R8SrgbPack32,
            ColorFormat.A2R10G10B10_UNORM_PACK32 => Format.A2R10G10B10UnormPack32,
            ColorFormat.A2R10G10B10_SNORM_PACK32 => Format.A2R10G10B10SNormPack32,
            ColorFormat.A2R10G10B10_USCALED_PACK32 => Format.A2R10G10B10UscaledPack32,
            ColorFormat.A2R10G10B10_SSCALED_PACK32 => Format.A2R10G10B10SscaledPack32,
            ColorFormat.A2R10G10B10_UINT_PACK32 => Format.A2R10G10B10UintPack32,
            ColorFormat.A2R10G10B10_SINT_PACK32 => Format.A2R10G10B10SintPack32,
            ColorFormat.A2B10G10R10_UNORM_PACK32 => Format.A2B10G10R10UnormPack32,
            ColorFormat.A2B10G10R10_SNORM_PACK32 => Format.A2B10G10R10SNormPack32,
            ColorFormat.A2B10G10R10_USCALED_PACK32 => Format.A2B10G10R10UscaledPack32,
            ColorFormat.A2B10G10R10_SSCALED_PACK32 => Format.A2B10G10R10SscaledPack32,
            ColorFormat.A2B10G10R10_UINT_PACK32 => Format.A2B10G10R10UintPack32,
            ColorFormat.A2B10G10R10_SINT_PACK32 => Format.A2B10G10R10SintPack32,
            ColorFormat.R16_UNORM => Format.R16Unorm,
            ColorFormat.R16_SNORM => Format.R16SNorm,
            ColorFormat.R16_USCALED => Format.R16Uscaled,
            ColorFormat.R16_SSCALED => Format.R16Sscaled,
            ColorFormat.R16_UINT => Format.R16Uint,
            ColorFormat.R16_SINT => Format.R16Sint,
            ColorFormat.R16_SFLOAT => Format.R16Sfloat,
            ColorFormat.R16G16_UNORM => Format.R16G16Unorm,
            ColorFormat.R16G16_SNORM => Format.R16G16SNorm,
            ColorFormat.R16G16_USCALED => Format.R16G16Uscaled,
            ColorFormat.R16G16_SSCALED => Format.R16G16Sscaled,
            ColorFormat.R16G16_UINT => Format.R16G16Uint,
            ColorFormat.R16G16_SINT => Format.R16G16Sint,
            ColorFormat.R16G16_SFLOAT => Format.R16G16Sfloat,
            ColorFormat.R16G16B16_UNORM => Format.R16G16B16Unorm,
            ColorFormat.R16G16B16_SNORM => Format.R16G16B16SNorm,
            ColorFormat.R16G16B16_USCALED => Format.R16G16B16Uscaled,
            ColorFormat.R16G16B16_SSCALED => Format.R16G16B16Sscaled,
            ColorFormat.R16G16B16_UINT => Format.R16G16B16Uint,
            ColorFormat.R16G16B16_SINT => Format.R16G16B16Sint,
            ColorFormat.R16G16B16_SFLOAT => Format.R16G16B16Sfloat,
            ColorFormat.R16G16B16A16_UNORM => Format.R16G16B16A16Unorm,
            ColorFormat.R16G16B16A16_SNORM => Format.R16G16B16A16SNorm,
            ColorFormat.R16G16B16A16_USCALED => Format.R16G16B16A16Uscaled,
            ColorFormat.R16G16B16A16_SSCALED => Format.R16G16B16A16Sscaled,
            ColorFormat.R16G16B16A16_UINT => Format.R16G16B16A16Uint,
            ColorFormat.R16G16B16A16_SINT => Format.R16G16B16A16Sint,
            ColorFormat.R16G16B16A16_SFLOAT => Format.R16G16B16A16Sfloat,
            ColorFormat.R32_UINT => Format.R32Uint,
            ColorFormat.R32_SINT => Format.R32Sint,
            ColorFormat.R32_SFLOAT => Format.R32Sfloat,
            ColorFormat.R32G32_UINT => Format.R32G32Uint,
            ColorFormat.R32G32_SINT => Format.R32G32Sint,
            ColorFormat.R32G32_SFLOAT => Format.R32G32Sfloat,
            ColorFormat.R32G32B32_UINT => Format.R32G32B32Uint,
            ColorFormat.R32G32B32_SINT => Format.R32G32B32Sint,
            ColorFormat.R32G32B32_SFLOAT => Format.R32G32B32Sfloat,
            ColorFormat.R32G32B32A32_UINT => Format.R32G32B32A32Uint,
            ColorFormat.R32G32B32A32_SINT => Format.R32G32B32A32Sint,
            ColorFormat.R32G32B32A32_SFLOAT => Format.R32G32B32A32Sfloat,
            ColorFormat.R64_UINT => Format.R64Uint,
            ColorFormat.R64_SINT => Format.R64Sint,
            ColorFormat.R64_SFLOAT => Format.R64Sfloat,
            ColorFormat.R64G64_UINT => Format.R64G64Uint,
            ColorFormat.R64G64_SINT => Format.R64G64Sint,
            ColorFormat.R64G64_SFLOAT => Format.R64G64Sfloat,
            ColorFormat.R64G64B64_UINT => Format.R64G64B64Uint,
            ColorFormat.R64G64B64_SINT => Format.R64G64B64Sint,
            ColorFormat.R64G64B64_SFLOAT => Format.R64G64B64Sfloat,
            ColorFormat.R64G64B64A64_UINT => Format.R64G64B64A64Uint,
            ColorFormat.R64G64B64A64_SINT => Format.R64G64B64A64Sint,
            ColorFormat.R64G64B64A64_SFLOAT => Format.R64G64B64A64Sfloat,
            ColorFormat.B10G11R11_UFLOAT_PACK32 => Format.B10G11R11UfloatPack32,
            _ => throw new ArgumentOutOfRangeException(nameof(format), format, null)
        };
    }

    public static Format ToVkFormat(this DepthStencilFormat format)
    {
        return format switch {
            DepthStencilFormat.D16_UNORM => Format.D16Unorm,
            DepthStencilFormat.X8D24_UNORM_PACK32 => Format.X8D24UnormPack32,
            DepthStencilFormat.D32_SFLOAT => Format.D32Sfloat,
            DepthStencilFormat.S8_UINT => Format.S8Uint,
            DepthStencilFormat.D16_UNORM_S8_UINT => Format.D16UnormS8Uint,
            DepthStencilFormat.D24_UNORM_S8_UINT => Format.D24UnormS8Uint,
            DepthStencilFormat.D32_SFLOAT_S8_UINT => Format.D32SfloatS8Uint,
            _ => throw new ArgumentOutOfRangeException(nameof(format), format, null)
        };
    }
}